set(stdsortPlugin_SRCS stdsort.cpp qsort.cpp mergesort.cpp)
add_library(stdsort MODULE ${stdsortPlugin_SRCS})
set_target_properties(stdsort PROPERTIES PREFIX "")
set_target_properties(stdsort PROPERTIES COMPILE_FLAGS "${COMPILE_VISIBILITY_FLAGS}")

option(ENABLE_N2SORTS "Enable O(n^2) sorting" OFF)
if(ENABLE_N2SORTS)
  set(n2sortPlugin_SRCS bsort.cpp)
  add_library(n2sort MODULE ${n2sortPlugin_SRCS})
  set_target_properties(n2sort PROPERTIES PREFIX "")
  set_target_properties(n2sort PROPERTIES COMPILE_FLAGS "${COMPILE_VISIBILITY_FLAGS}")
endif()


option(ENABLE_OMP "Enable OMP sorting" ON)
if(ENABLE_OMP)
  find_package(OpenMP REQUIRED)
  set(ompsortPlugin_SRCS ompqsort.cpp) #ompmsort.cpp)
  add_library(ompsort MODULE ${ompsortPlugin_SRCS})
  set_target_properties(ompsort PROPERTIES PREFIX "")
  set_target_properties(ompsort PROPERTIES COMPILE_FLAGS "${COMPILE_VISIBILITY_FLAGS} ${OpenMP_CXX_FLAGS}")
  set_target_properties(ompsort PROPERTIES LINK_FLAGS "${OpenMP_CXX_FLAGS}")
endif()

option(ENABLE_THRUST "Enable thrust sorting" ON)
if(ENABLE_THRUST)
  find_package(CUDA REQUIRED)
  set(thrustsortPlugin_SRCS thrustsort.cu)
  cuda_add_library(thrustsort MODULE ${thrustsortPlugin_SRCS})
  set_target_properties(thrustsort PROPERTIES PREFIX "")
endif()
